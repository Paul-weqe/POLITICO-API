-- DROPING TABLES
DROP TABLE IF EXISTS votes;
DROP TABLE IF EXISTS petitions;
DROP TABLE IF EXISTS candidates;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS offices;
DROP TABLE IF EXISTS parties;


-- CREATING TABLES
CREATE TABLE offices(
    id serial primary key,
    office_name varchar(20) UNIQUE,
    office_type varchar(20)
    );


-- this table has the basic 
CREATE TABLE parties (
    id serial primary key,
    party_name varchar(30),
    party_hq_address varchar(20),
    party_logo_url text
);


CREATE TABLE users(
    id serial primary key,
    first_name varchar(20),
    last_name varchar(20),
    other_name varchar(20),
    email varchar(50) UNIQUE NOT NULL, 
    password varchar(100) NOT NULL,
    phone_number varchar(20),
    passport_url varchar(100), 
    is_admin boolean default false, 
    username varchar(20) UNIQUE NOT NULL
    );

INSERT INTO users (first_name, last_name, other_name, email, password, phone_number, passport_url, is_admin, username) VALUES 
('Paul', 'Wekesa', 'Waswa', 'paul@paul.com', md5('Omwene11@'), '0703656039', 'http://passport_url', true, 'weqe');


create table petitions (
    id serial primary key,
    created_on date NOT NULL DEFAULT CURRENT_DATE,
    create_by integer references users(id),
    office integer references offices(id),
    body text
     );

create table candidates(
    id serial,
    user_id integer unique references users(id),
    office_id integer references users(id),
    party_id integer references parties(id),
    primary key(user_id, office_id, id)
);


CREATE TABLE votes (
    id serial primary key,
    created_on date NOT NULL DEFAULT CURRENT_DATE,
    candidate_id integer references candidates(user_id),
    voter_id integer references users(id)
);
